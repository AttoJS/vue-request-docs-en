(self.webpackChunken=self.webpackChunken||[]).push([[671],{145:(e,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>oa});var s=a(7875);const t=(0,s.uE)('<h1 id="public-api"><a class="header-anchor" href="#public-api">#</a> Public API</h1><p>VueRequest usually consists of three parts: <a href="#return-value">Return Values</a>, <a href="#service">Service</a>, and <a href="#options">Options</a></p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token operator">...</span>ReturnValues <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRequest</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">P</span><span class="token punctuation">,</span> <span class="token constant">FR</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Service<span class="token punctuation">,</span> Options<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TS Generic description</p><p><code>R</code> is a generic type of <a href="#data"><code>data</code></a>.</p><p><code>P</code> is a generic of <a href="#params"><code>params</code></a>. (<strong>Note:</strong> This generic is subject to <code>unknown[]</code> constraints)</p><p><code>FR</code> is the type of <code>data</code> returned by <a href="#formatresult"><code>formatResult</code></a>. (<strong>Note:</strong> The <code>R</code> generics mentioned in the following documents, after using <code>formatResult</code>, use <code>FR</code> instead)</p></div><h2 id="return-values"><a class="header-anchor" href="#return-values">#</a> Return Values</h2><h3 id="data"><a class="header-anchor" href="#data">#</a> data</h3><ul><li><p><strong>Type:</strong> <code>Ref&lt;R | undefined&gt;</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p><p>The data returned by request, if <a href="#formatresult">formatResult</a> is passed in, the data returned by request will be the formatted <code>data</code>.</p></li></ul><h3 id="loading"><a class="header-anchor" href="#loading">#</a> loading</h3><ul><li><p><strong>Type:</strong> <code>Ref&lt;boolean&gt;</code></p></li><li><p><strong>Default:</strong> <code>false</code></p><p><a href="#service"><strong>Service</strong></a> The execution status of the request</p></li></ul><h3 id="params"><a class="header-anchor" href="#params">#</a> params</h3><ul><li><p><strong>Type:</strong> <code>Ref&lt;P[]&gt;</code></p></li><li><p><strong>Default:</strong> <code>[]</code></p><p><a href="#service"><strong>Service</strong></a> request parameters</p></li><li><p><strong>Usage:</strong></p></li></ul><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getUser</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;api/user?&#39;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> params<span class="token punctuation">,</span> run <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>getUser<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  defaultParams<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;John&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// In the default request, if defaultParams exists, params. the value will be equal to defaultParams. Otherwise, it will be an empty array.</span>\n\n<span class="token comment">// When run passes in parameters, the parameters at this time will be synchronized to params</span>\n<span class="token function">run</span><span class="token punctuation">(</span><span class="token string">&#39;Benny&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// params.value is [&#39;Benny&#39;]</span>\n</code></pre></div><h3 id="error"><a class="header-anchor" href="#error">#</a> error</h3><ul><li><p><strong>Type:</strong> <code>Ref&lt;Error | undefined&gt;</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p><p>If an error is thrown internally, it will be received by <code>error</code> and returned.</p></li></ul><h3 id="queries"><a class="header-anchor" href="#queries">#</a> queries</h3>',15),l=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Type:"),(0,s.Uk)(),(0,s.Wm)("code",null,"Queries<R, P>")])],-1),o=(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Default:"),(0,s.Uk)(),(0,s.Wm)("code",null,"Object")],-1),r=(0,s.Wm)("p",null,[(0,s.Uk)("By default, the newly requested data will overwrite the old requested data. When "),(0,s.Wm)("a",{href:"#querykey"},[(0,s.Wm)("code",null,"queryKey()")]),(0,s.Uk)(" is enabled, "),(0,s.Wm)("code",null,"queries"),(0,s.Uk)(" can store the results of multiple requests at the same time, achieving parallel effects")],-1),p={class:"custom-container tip"},c=(0,s.Wm)("p",{class:"custom-container-title"},"Note",-1),i=(0,s.Wm)("code",null,"queries",-1),u=(0,s.Uk)(" is a "),d={href:"https://v3.vuejs.org/api/basic-reactivity.html#reactive",target:"_blank",rel:"noopener noreferrer"},h=(0,s.Wm)("code",null,"reactive",-1),g=(0,s.Uk)(" object"),m=(0,s.uE)('<p>The types of <code>Queries</code> are as follows.</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Queries<span class="token operator">&lt;</span><span class="token constant">R</span><span class="token punctuation">,</span> <span class="token constant">P</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  loading<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  data<span class="token operator">:</span> <span class="token constant">R</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n  error<span class="token operator">:</span> Error <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n  params<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token operator">...</span>params<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">cancel</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">refresh</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">mutate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">arg</span><span class="token operator">:</span> <span class="token punctuation">(</span>oldData<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">R</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token operator">|</span> <span class="token punctuation">(</span>newData<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',2),k=(0,s.Wm)("strong",null,"See also:",-1),f=(0,s.Uk)(),W=(0,s.Uk)("Concurrent Request"),y=(0,s.uE)('<h3 id="run"><a class="header-anchor" href="#run">#</a> run</h3><ul><li><p><strong>Type:</strong> <code>(...params: P[]) =&gt; Promise&lt;R&gt;</code></p><p>Manually trigger the request of <a href="#service"><strong>Service</strong></a></p><div class="custom-container tip"><p class="custom-container-title">Note</p><p>When <a href="#debounceinterval">debounceInterval</a> or <a href="#throttleinterval">throttleInterval</a> mode is enabled. The return result of <a href="#run"><code>run</code></a> may be <code>Promise&lt;null&gt;</code></p></div></li></ul><h3 id="cancel"><a class="header-anchor" href="#cancel">#</a> cancel</h3><ul><li><p><strong>Type:</strong> <code>() =&gt; void</code></p><ul><li>Manually cancel the current request.</li><li>Pause <a href="#pollinginterval">polling</a>.</li></ul><div class="custom-container tip"><p class="custom-container-title">Note</p><p>The cancellation mentioned here is not a real stop request but cancels the assignment of <a href="#data">data</a> and resets <a href="#loading">loading</a> to <code>false</code>. <strong>The current request will not be interrupted.</strong></p></div></li></ul><h3 id="refresh"><a class="header-anchor" href="#refresh">#</a> refresh</h3><ul><li><p><strong>Type:</strong> <code>() =&gt; Promise&lt;R&gt;</code></p><p>Recall <a href="#run">run</a> with the current <a href="#params">params</a>.</p></li></ul><h3 id="reload"><a class="header-anchor" href="#reload">#</a> reload</h3><ul><li><p><strong>Type:</strong> <code>() =&gt; void</code></p><p>Used to clear <a href="#queries"><code>queries</code></a> data and all request status (including <a href="#data"><code>data</code></a>). If <a href="#manual"><code>manual</code></a> is <code>false</code>, <a href="#defaultparams"><code>defaultParams</code></a> will be used to trigger again <a href="#run"><code>run()</code></a>.</p></li></ul><h3 id="mutate"><a class="header-anchor" href="#mutate">#</a> mutate</h3>',9),v=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Type:"),(0,s.Uk)(),(0,s.Wm)("code",null,"(arg: (oldData: R) => R) => void | (newData: R) => void")]),(0,s.Wm)("p",null,[(0,s.Uk)("Modify "),(0,s.Wm)("a",{href:"#data"},"data"),(0,s.Uk)(" directly")])],-1),w=(0,s.Wm)("strong",null,"See also:",-1),b=(0,s.Uk)(),U=(0,s.Uk)("Mutate"),q=(0,s.Wm)("h2",{id:"service"},[(0,s.Wm)("a",{class:"header-anchor",href:"#service"},"#"),(0,s.Uk)(" Service")],-1),R=(0,s.Uk)("For the request. See also "),D=(0,s.Uk)("Default Request"),T=(0,s.uE)('<h3 id="request-method"><a class="header-anchor" href="#request-method">#</a> Request Method</h3><ul><li><p><strong>Type:</strong></p><ul><li><code>(...params: P[]) =&gt; Promise&lt;R&gt;</code></li><li><code>| (...params: P[]) =&gt; string</code></li><li><code>| (...params: P[]) =&gt; ({ url: string; [key: string]: any; })</code></li></ul></li><li><p><strong>Details:</strong></p><p>You can pass in a function whose return value is <code>Promise</code>, <a href="#string">String</a> or <a href="#object">Object</a>. We recommend returning a <code>Promise</code> directly. You can use <strong>third-party request library</strong> (such as <code>axios</code>) to help you generate a <code>Promise</code> function for initiating a request to obtain resources.</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getUser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;api/user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>getUser<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div></li></ul><h3 id="string"><a class="header-anchor" href="#string">#</a> String</h3>',3),P=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Type:"),(0,s.Uk)(),(0,s.Wm)("code",null,"string")])],-1),S=(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Details:")],-1),I=(0,s.Uk)("If you pass in a string or call it by returning a string from "),E=(0,s.Wm)("a",{href:"#request-method"},"Request Method",-1),_=(0,s.Uk)(", then we will use the global "),x={href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",target:"_blank",rel:"noopener noreferrer"},j=(0,s.Wm)("code",null,"fetch()",-1),O=(0,s.Uk)(" method to initiate a request to obtain resources, this string will be used as the "),A=(0,s.Wm)("strong",null,"URL",-1),F=(0,s.Uk)(" for obtaining resources"),C=(0,s.Wm)("h3",{id:"object"},[(0,s.Wm)("a",{class:"header-anchor",href:"#object"},"#"),(0,s.Uk)(" Object")],-1),M=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Type:"),(0,s.Uk)(),(0,s.Wm)("code",null,"{ url: string; [key: string]: any; }")])],-1),B=(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Details:")],-1),K=(0,s.Uk)("If you pass in an object or call it by returning an object via "),L=(0,s.Wm)("a",{href:"#request-method"},"Request Method",-1),z=(0,s.Uk)(", then we will use the global "),V={href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",target:"_blank",rel:"noopener noreferrer"},H=(0,s.Wm)("code",null,"fetch()",-1),N=(0,s.Uk)(" method to initiate a request for resources. The object must contain a key-value pair named "),Y=(0,s.Wm)("strong",null,"URL",-1),Q=(0,s.Uk)(", which will be used as the "),G=(0,s.Wm)("strong",null,"URL",-1),J=(0,s.Uk)(" for obtaining resources."),X=(0,s.Wm)("h2",{id:"options"},[(0,s.Wm)("a",{class:"header-anchor",href:"#options"},"#"),(0,s.Uk)(" Options")],-1),Z=(0,s.Wm)("h3",{id:"loadingdelay"},[(0,s.Wm)("a",{class:"header-anchor",href:"#loadingdelay"},"#"),(0,s.Uk)(" loadingDelay")],-1),$=(0,s.uE)('<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>0</code></p></li><li><p><strong>Details:</strong></p><p>By setting the delay in milliseconds, you can delay the time <a href="#loading"><strong>loading</strong></a> becomes <code>true</code>, effectively preventing flicker.</p></li>',3),ee=(0,s.Wm)("strong",null,"See also:",-1),ne=(0,s.Uk)(),ae=(0,s.Uk)("Loading Delay"),se=(0,s.Wm)("h3",{id:"pollinginterval"},[(0,s.Wm)("a",{class:"header-anchor",href:"#pollinginterval"},"#"),(0,s.Uk)(" pollingInterval")],-1),te=(0,s.uE)('<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p></li><li><p><strong>Details:</strong></p><p>By setting the polling interval&#39;s millisecond value, you can enter the polling mode and trigger the request regularly. You can use <a href="#run"><code>run</code></a> / <a href="#cancel"><code>cancel</code></a> to <strong>enable</strong>/<strong>stop</strong> polling. When <a href="#manual"><code>manual</code></a> is set to <code>true</code>, you need to execute a <code>run</code> before starting polling manually.</p><ul><li>The interval value must be greater than <code>0</code> to take effect</li></ul></li>',3),le=(0,s.Wm)("strong",null,"See also:",-1),oe=(0,s.Uk)(),re=(0,s.Uk)("Polling"),pe=(0,s.Wm)("h3",{id:"pollingwhenhidden"},[(0,s.Wm)("a",{class:"header-anchor",href:"#pollingwhenhidden"},"#"),(0,s.Uk)(" pollingWhenHidden")],-1),ce=(0,s.uE)('<li><p><strong>Type:</strong> <code>boolean</code></p></li><li><p><strong>Default:</strong> <code>false</code></p></li><li><p><strong>Details:</strong></p><p>It takes effect when <a href="#pollingInterval"><code>pollingInterval</code></a> is greater than <code>0</code>. By default, polling will be suspended when the screen is not visible. When set to <code>true</code>, polling tasks will still be executed regularly when the screen is not visible.</p></li>',3),ie=(0,s.Wm)("strong",null,"See also:",-1),ue=(0,s.Uk)(),de=(0,s.Uk)("PollingWhenHidden"),he=(0,s.Wm)("h3",{id:"pollingwhenoffline"},[(0,s.Wm)("a",{class:"header-anchor",href:"#pollingwhenoffline"},"#"),(0,s.Uk)(" pollingWhenOffline")],-1),ge=(0,s.uE)('<li><p><strong>Type:</strong> <code>boolean</code></p></li><li><p><strong>Default:</strong> <code>false</code></p></li><li><p><strong>Details:</strong></p><p>It takes effect when <a href="#pollingInterval"><code>pollingInterval</code></a> is greater than <code>0</code>. By default, polling will be suspended when the network is unavailable. When set to <code>true</code>, the polling task will still be executed regularly when the network is not available.</p></li>',3),me=(0,s.Wm)("strong",null,"See also:",-1),ke=(0,s.Uk)(),fe=(0,s.Uk)("PollingWhenOffline"),We=(0,s.Wm)("h3",{id:"debounceinterval"},[(0,s.Wm)("a",{class:"header-anchor",href:"#debounceinterval"},"#"),(0,s.Uk)(" debounceInterval")],-1),ye=(0,s.uE)('<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p></li><li><p><strong>Details:</strong></p><p>Enter the debounce mode by setting the number of milliseconds to delay. At this time, if <a href="#run"><code>run</code></a> is triggered frequently, the request will be made with the debounce strategy.</p></li>',3),ve=(0,s.Wm)("strong",null,"See also:",-1),we=(0,s.Uk)(),be=(0,s.Uk)("Debounce"),Ue=(0,s.Wm)("h3",{id:"throttleinterval"},[(0,s.Wm)("a",{class:"header-anchor",href:"#throttleinterval"},"#"),(0,s.Uk)(" throttleInterval")],-1),qe=(0,s.uE)('<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p></li><li><p><strong>Details:</strong></p><p>Enter the throttling mode by setting the number of milliseconds for throttling. At this time, if <a href="#run"><code>run</code></a> is triggered frequently, the request will be made with a throttling strategy.</p></li>',3),Re=(0,s.Wm)("strong",null,"See also:",-1),De=(0,s.Uk)(),Te=(0,s.Uk)("Throttle"),Pe=(0,s.Wm)("h3",{id:"refreshonwindowfocus"},[(0,s.Wm)("a",{class:"header-anchor",href:"#refreshonwindowfocus"},"#"),(0,s.Uk)(" refreshOnWindowFocus")],-1),Se=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Type:"),(0,s.Uk)(),(0,s.Wm)("code",null,"boolean")])],-1),Ie=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Default:"),(0,s.Uk)(),(0,s.Wm)("code",null,"false")])],-1),Ee=(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Details:")],-1),_e=(0,s.Uk)("When set to "),xe=(0,s.Wm)("code",null,"true",-1),je=(0,s.Uk)(", "),Oe={href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus",target:"_blank",rel:"noopener noreferrer"},Ae=(0,s.Uk)("focus"),Fe=(0,s.Uk)(" and "),Ce={href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilitychange_event",target:"_blank",rel:"noopener noreferrer"},Me=(0,s.Uk)("visibilitychange"),Be=(0,s.Uk)(", the request will be re-initiated."),Ke=(0,s.Wm)("strong",null,"See also:",-1),Le=(0,s.Uk)(),ze=(0,s.Uk)("Refresh On Window Focus"),Ve=(0,s.Wm)("h3",{id:"refocustimespan"},[(0,s.Wm)("a",{class:"header-anchor",href:"#refocustimespan"},"#"),(0,s.Uk)(" refocusTimespan")],-1),He=(0,s.uE)('<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>5000</code></p></li><li><p><strong>Details:</strong></p><p>When <a href="#refreshonwindowfocus">refreshOnWindowFocus</a> is set to <code>true</code>, you can limit the execution interval of <a href="#refresh"><code>refresh</code></a> by setting the interval in milliseconds. The default is 5000ms.</p></li>',3),Ne=(0,s.Wm)("strong",null,"See also:",-1),Ye=(0,s.Uk)(),Qe=(0,s.Uk)("RefocusTimespan"),Ge=(0,s.Wm)("h3",{id:"cachekey"},[(0,s.Wm)("a",{class:"header-anchor",href:"#cachekey"},"#"),(0,s.Uk)(" cacheKey")],-1),Je=(0,s.uE)('<li><p><strong>Type:</strong> <code>string</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p></li><li><p><strong>Details:</strong></p><ul><li>We will cache every request <a href="#data"><code>data</code></a>, <a href="#error"><code>error</code></a>, <a href="#params"><code>params</code></a>, <a href="#loading"><code>loading</code></a></li><li>If <code>cacheKey</code> is set, VueRequest will cache the current request data. When the next component is initialized, if there is cached data, we will return the cached data first and then send a new request behind the scenes. After the new data is returned, we will trigger the data update and update the cached data again, which is the ability of <strong>SWR</strong>.</li><li>The request for the same cacheKey is shared globally. i.e., you can load data in advance. With this feature, preloading can be easily achieved.</li></ul></li>',3),Xe=(0,s.Wm)("strong",null,"See also:",-1),Ze=(0,s.Uk)(),$e=(0,s.Uk)("Cache / Preload"),en=(0,s.Wm)("h3",{id:"cachetime"},[(0,s.Wm)("a",{class:"header-anchor",href:"#cachetime"},"#"),(0,s.Uk)(" cacheTime")],-1),nn=(0,s.uE)("<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>600000</code></p></li><li><p><strong>Details:</strong></p><p>When the cache is turned on, you can tell us the cache&#39;s expiration time by setting <code>cacheTime</code>. When the cache expires, we will delete it. The default is <strong>600000 milliseconds</strong>, which is 10 minutes.</p></li>",3),an=(0,s.Wm)("strong",null,"See also:",-1),sn=(0,s.Uk)(),tn=(0,s.Uk)("CacheTime"),ln=(0,s.Wm)("h3",{id:"staletime"},[(0,s.Wm)("a",{class:"header-anchor",href:"#staletime"},"#"),(0,s.Uk)(" staleTime")],-1),on=(0,s.uE)("<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>0</code></p></li><li><p><strong>Details:</strong></p><p>If you can ensure that the cached data will not be updated in a certain period of time, we recommend that you set a reasonable number of milliseconds.</p><ul><li>The default is <code>0</code>, which means no preservation, and the request will be reissued every time.</li><li>Set to <code>-1</code> means the cache will never expire.</li></ul></li>",3),rn=(0,s.Wm)("strong",null,"See also:",-1),pn=(0,s.Uk)(),cn=(0,s.Uk)("StaleTime"),un=(0,s.Wm)("h3",{id:"errorretrycount"},[(0,s.Wm)("a",{class:"header-anchor",href:"#errorretrycount"},"#"),(0,s.Uk)(" errorRetryCount")],-1),dn=(0,s.uE)("<li><p><strong>Type:</strong> <code>number</code></p></li><li><p><strong>Default:</strong> <code>0</code></p></li><li><p><strong>Details:</strong></p><p>Max error retry count</p></li>",3),hn=(0,s.Wm)("strong",null,"See also:",-1),gn=(0,s.Uk)(),mn=(0,s.Uk)("ErrorRetryCount"),kn=(0,s.Wm)("h3",{id:"errorretryinterval"},[(0,s.Wm)("a",{class:"header-anchor",href:"#errorretryinterval"},"#"),(0,s.Uk)(" errorRetryInterval")],-1),fn=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Type:"),(0,s.Uk)(),(0,s.Wm)("code",null,"number")])],-1),Wn=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Default:"),(0,s.Uk)(),(0,s.Wm)("code",null,"0")])],-1),yn=(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Details:")],-1),vn=(0,s.Uk)("By default, VueRequest uses "),wn={href:"https://en.wikipedia.org/wiki/Exponential_backoff",target:"_blank",rel:"noopener noreferrer"},bn=(0,s.Wm)("strong",null,"Binary Exponential Backoff Algorithm",-1),Un=(0,s.Uk)(" to help you calculate the appropriate interval time. You can also set "),qn=(0,s.Wm)("code",null,"errorRetryInterval",-1),Rn=(0,s.Uk)(" to Override default behavior."),Dn=(0,s.Wm)("strong",null,"See also:",-1),Tn=(0,s.Uk)(),Pn=(0,s.Uk)("ErrorRetryInterval"),Sn=(0,s.Wm)("h3",{id:"manual"},[(0,s.Wm)("a",{class:"header-anchor",href:"#manual"},"#"),(0,s.Uk)(" manual")],-1),In=(0,s.uE)('<li><p><strong>Type:</strong> <code>boolean</code></p></li><li><p><strong>Default:</strong> <code>false</code></p></li><li><p><strong>Details:</strong></p><p>When <code>manual</code> is set to <code>true</code>, you need to manually trigger <a href="#run"><code>run</code></a> to initiate the request.</p></li>',3),En=(0,s.Wm)("strong",null,"See also:",-1),_n=(0,s.Uk)(),xn=(0,s.Uk)("Manually Trigger"),jn=(0,s.uE)('<h3 id="defaultparams"><a class="header-anchor" href="#defaultparams">#</a> defaultParams</h3><ul><li><p><strong>Type:</strong> <code>P[]</code></p></li><li><p><strong>Default:</strong> <code>[]</code></p></li><li><p><strong>Details:</strong></p><p>If <a href="#manual"><code>manual</code></a> is set to <code>false</code>, when the run is automatically executed, <code>defaultParams</code> will be used as the request parameter.</p></li></ul><h3 id="ready"><a class="header-anchor" href="#ready">#</a> ready</h3>',3),On=(0,s.uE)('<li><p><strong>Type:</strong> <code>Ref&lt;boolean&gt;</code></p></li><li><p><strong>Default:</strong> <code>true</code></p></li><li><p><strong>Details:</strong></p><p>Only when <code>ready</code> is <code>true</code> will the request be initiated.</p><ul><li>This behavior is <strong>only triggered once</strong>. If you want to trigger multiple times, it is recommended to use <a href="#refreshdeps"><code>refreshDeps</code></a> or implement the relevant logic yourself.</li></ul></li>',3),An=(0,s.Wm)("strong",null,"See also:",-1),Fn=(0,s.Uk)(),Cn=(0,s.Uk)("Dependent Request"),Mn=(0,s.uE)('<h3 id="initialdata"><a class="header-anchor" href="#initialdata">#</a> initialData</h3><ul><li><p><strong>Type:</strong> <code>R</code></p></li><li><p><strong>Default:</strong> <code>undefined</code></p></li><li><p><strong>Details:</strong></p><p>Initialized <a href="#data"><code>data</code></a>.</p></li></ul><h3 id="refreshdeps"><a class="header-anchor" href="#refreshdeps">#</a> refreshDeps</h3>',3),Bn=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Type:"),(0,s.Uk)(),(0,s.Wm)("code",null,"WatchSource<any>[]")])],-1),Kn=(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Default:"),(0,s.Uk)(),(0,s.Wm)("code",null,"[]")])],-1),Ln=(0,s.Wm)("p",null,[(0,s.Wm)("strong",null,"Details:")],-1),zn=(0,s.Uk)("The change of "),Vn=(0,s.Wm)("code",null,"refreshDeps",-1),Hn=(0,s.Uk)(" will trigger the re-execution of "),Nn=(0,s.Wm)("code",null,"refresh",-1),Yn=(0,s.Uk)(". Its essence is just an encapsulation of "),Qn={href:"https://v3.vuejs.org/guide/computed.html#watchers",target:"_blank",rel:"noopener noreferrer"},Gn=(0,s.Wm)("code",null,"watch",-1),Jn=(0,s.uE)('<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">watch</span><span class="token punctuation">(</span>refreshDeps<span class="token punctuation">,</span> refresh<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',1),Xn=(0,s.Wm)("strong",null,"See also:",-1),Zn=(0,s.Uk)(),$n=(0,s.Uk)("Dependency Refresh"),ea=(0,s.Wm)("h3",{id:"querykey"},[(0,s.Wm)("a",{class:"header-anchor",href:"#querykey"},"#"),(0,s.Uk)(" queryKey")],-1),na=(0,s.uE)('<li><p><strong>Type:</strong> <code>(...params: P[]) =&gt; string</code></p></li><li><p><strong>Details:</strong></p><p>According to params, get the <strong>key</strong> of the current request. After setting, we will maintain the request status with different <strong>key</strong> values in <a href="#queries"><code>queries</code></a> at the same time.</p></li>',2),aa=(0,s.Wm)("strong",null,"See also:",-1),sa=(0,s.Uk)(),ta=(0,s.Uk)("Concurrent Request"),la=(0,s.uE)('<h3 id="formatresult"><a class="header-anchor" href="#formatresult">#</a> formatResult</h3><ul><li><p><strong>Type:</strong> <code>(data: R) =&gt; FR</code></p></li><li><p><strong>Details:</strong></p><p>Format the request result, the input parameter is the <code>data</code> returned by the original interface, and the output parameter is the processed <code>data</code>.</p><div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token generic-function"><span class="token function">useRequest</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;api/timestramp&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">formatResult</span><span class="token operator">:</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div></li></ul><h3 id="onsuccess"><a class="header-anchor" href="#onsuccess">#</a> onSuccess</h3><ul><li><p><strong>Type:</strong> <code>(data: R, params: P[]) =&gt; void</code></p></li><li><p><strong>Details:</strong></p><p>Triggered when <a href="#service">Service</a> <code>resolve</code>, the parameters are <a href="#data"><code>data</code></a> and <a href="#params"><code>params</code></a>.</p><ul><li>If there is <a href="#formatresult"><code>formatResult</code></a>, then <a href="#data"><code>data</code></a> is the formatted data.</li></ul></li></ul><h3 id="onerror"><a class="header-anchor" href="#onerror">#</a> onError</h3><ul><li><p><strong>Type:</strong> <code>(error: Error, params: P[]) =&gt; void</code></p></li><li><p><strong>Details:</strong></p><p>Triggered when <a href="#service">Service</a> <code>reject</code>, the parameters are <a href="#error"><code>error</code></a> and <a href="#params"><code>params</code></a>.</p></li></ul>',6),oa={render:function(e,n){const a=(0,s.up)("OutboundLink"),oa=(0,s.up)("RouterLink");return(0,s.wg)(),(0,s.j4)(s.HY,null,[t,(0,s.Wm)("ul",null,[l,(0,s.Wm)("li",null,[o,r,(0,s.Wm)("div",p,[c,(0,s.Wm)("p",null,[i,u,(0,s.Wm)("a",d,[h,(0,s.Wm)(a)]),g])]),m]),(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[k,f,(0,s.Wm)(oa,{to:"/guide/documentation/queries.html"},{default:(0,s.w5)((()=>[W])),_:1})])])]),y,(0,s.Wm)("ul",null,[v,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[w,b,(0,s.Wm)(oa,{to:"/guide/documentation/mutate.html"},{default:(0,s.w5)((()=>[U])),_:1})])])]),q,(0,s.Wm)("p",null,[R,(0,s.Wm)(oa,{to:"/guide/documentation/default-request.html"},{default:(0,s.w5)((()=>[D])),_:1})]),T,(0,s.Wm)("ul",null,[P,(0,s.Wm)("li",null,[S,(0,s.Wm)("p",null,[I,E,_,(0,s.Wm)("a",x,[j,(0,s.Wm)(a)]),O,A,F])])]),C,(0,s.Wm)("ul",null,[M,(0,s.Wm)("li",null,[B,(0,s.Wm)("p",null,[K,L,z,(0,s.Wm)("a",V,[H,(0,s.Wm)(a)]),N,Y,Q,G,J])])]),X,Z,(0,s.Wm)("ul",null,[$,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[ee,ne,(0,s.Wm)(oa,{to:"/guide/documentation/loadingDelay.html"},{default:(0,s.w5)((()=>[ae])),_:1})])])]),se,(0,s.Wm)("ul",null,[te,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[le,oe,(0,s.Wm)(oa,{to:"/guide/documentation/polling.html"},{default:(0,s.w5)((()=>[re])),_:1})])])]),pe,(0,s.Wm)("ul",null,[ce,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[ie,ue,(0,s.Wm)(oa,{to:"/guide/documentation/polling.html#pollingwhenhidden"},{default:(0,s.w5)((()=>[de])),_:1})])])]),he,(0,s.Wm)("ul",null,[ge,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[me,ke,(0,s.Wm)(oa,{to:"/guide/documentation/polling.html#pollingwhenoffline"},{default:(0,s.w5)((()=>[fe])),_:1})])])]),We,(0,s.Wm)("ul",null,[ye,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[ve,we,(0,s.Wm)(oa,{to:"/guide/documentation/debounce.html"},{default:(0,s.w5)((()=>[be])),_:1})])])]),Ue,(0,s.Wm)("ul",null,[qe,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[Re,De,(0,s.Wm)(oa,{to:"/guide/documentation/throttle.html"},{default:(0,s.w5)((()=>[Te])),_:1})])])]),Pe,(0,s.Wm)("ul",null,[Se,Ie,(0,s.Wm)("li",null,[Ee,(0,s.Wm)("p",null,[_e,xe,je,(0,s.Wm)("a",Oe,[Ae,(0,s.Wm)(a)]),Fe,(0,s.Wm)("a",Ce,[Me,(0,s.Wm)(a)]),Be])]),(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[Ke,Le,(0,s.Wm)(oa,{to:"/guide/documentation/refresh-on-window-focus.html"},{default:(0,s.w5)((()=>[ze])),_:1})])])]),Ve,(0,s.Wm)("ul",null,[He,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[Ne,Ye,(0,s.Wm)(oa,{to:"/guide/documentation/refresh-on-window-focus.html#refocustimespan"},{default:(0,s.w5)((()=>[Qe])),_:1})])])]),Ge,(0,s.Wm)("ul",null,[Je,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[Xe,Ze,(0,s.Wm)(oa,{to:"/guide/documentation/cacheKey.html"},{default:(0,s.w5)((()=>[$e])),_:1})])])]),en,(0,s.Wm)("ul",null,[nn,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[an,sn,(0,s.Wm)(oa,{to:"/guide/documentation/cacheKey.html#cachetime"},{default:(0,s.w5)((()=>[tn])),_:1})])])]),ln,(0,s.Wm)("ul",null,[on,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[rn,pn,(0,s.Wm)(oa,{to:"/guide/documentation/cacheKey.html#staletime"},{default:(0,s.w5)((()=>[cn])),_:1})])])]),un,(0,s.Wm)("ul",null,[dn,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[hn,gn,(0,s.Wm)(oa,{to:"/guide/documentation/errorRetry.html#errorretrycount"},{default:(0,s.w5)((()=>[mn])),_:1})])])]),kn,(0,s.Wm)("ul",null,[fn,Wn,(0,s.Wm)("li",null,[yn,(0,s.Wm)("p",null,[vn,(0,s.Wm)("a",wn,[bn,(0,s.Wm)(a)]),Un,qn,Rn])]),(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[Dn,Tn,(0,s.Wm)(oa,{to:"/guide/documentation/errorRetry.html#errorretryinterval"},{default:(0,s.w5)((()=>[Pn])),_:1})])])]),Sn,(0,s.Wm)("ul",null,[In,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[En,_n,(0,s.Wm)(oa,{to:"/guide/documentation/manual.html"},{default:(0,s.w5)((()=>[xn])),_:1})])])]),jn,(0,s.Wm)("ul",null,[On,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[An,Fn,(0,s.Wm)(oa,{to:"/guide/documentation/ready.html"},{default:(0,s.w5)((()=>[Cn])),_:1})])])]),Mn,(0,s.Wm)("ul",null,[Bn,Kn,(0,s.Wm)("li",null,[Ln,(0,s.Wm)("p",null,[zn,Vn,Hn,Nn,Yn,(0,s.Wm)("a",Qn,[Gn,(0,s.Wm)(a)])]),Jn]),(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[Xn,Zn,(0,s.Wm)(oa,{to:"/guide/documentation/refreshDeps.html"},{default:(0,s.w5)((()=>[$n])),_:1})])])]),ea,(0,s.Wm)("ul",null,[na,(0,s.Wm)("li",null,[(0,s.Wm)("p",null,[aa,sa,(0,s.Wm)(oa,{to:"/guide/documentation/queries.html"},{default:(0,s.w5)((()=>[ta])),_:1})])])]),la],64)}}},3535:(e,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>s});const s={key:"v-744497ce",path:"/api/",title:"Public API",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Return Values",slug:"return-values",children:[{level:3,title:"data",slug:"data",children:[]},{level:3,title:"loading",slug:"loading",children:[]},{level:3,title:"params",slug:"params",children:[]},{level:3,title:"error",slug:"error",children:[]},{level:3,title:"queries",slug:"queries",children:[]},{level:3,title:"run",slug:"run",children:[]},{level:3,title:"cancel",slug:"cancel",children:[]},{level:3,title:"refresh",slug:"refresh",children:[]},{level:3,title:"reload",slug:"reload",children:[]},{level:3,title:"mutate",slug:"mutate",children:[]}]},{level:2,title:"Service",slug:"service",children:[{level:3,title:"Request Method",slug:"request-method",children:[]},{level:3,title:"String",slug:"string",children:[]},{level:3,title:"Object",slug:"object",children:[]}]},{level:2,title:"Options",slug:"options",children:[{level:3,title:"loadingDelay",slug:"loadingdelay",children:[]},{level:3,title:"pollingInterval",slug:"pollinginterval",children:[]},{level:3,title:"pollingWhenHidden",slug:"pollingwhenhidden",children:[]},{level:3,title:"pollingWhenOffline",slug:"pollingwhenoffline",children:[]},{level:3,title:"debounceInterval",slug:"debounceinterval",children:[]},{level:3,title:"throttleInterval",slug:"throttleinterval",children:[]},{level:3,title:"refreshOnWindowFocus",slug:"refreshonwindowfocus",children:[]},{level:3,title:"refocusTimespan",slug:"refocustimespan",children:[]},{level:3,title:"cacheKey",slug:"cachekey",children:[]},{level:3,title:"cacheTime",slug:"cachetime",children:[]},{level:3,title:"staleTime",slug:"staletime",children:[]},{level:3,title:"errorRetryCount",slug:"errorretrycount",children:[]},{level:3,title:"errorRetryInterval",slug:"errorretryinterval",children:[]},{level:3,title:"manual",slug:"manual",children:[]},{level:3,title:"defaultParams",slug:"defaultparams",children:[]},{level:3,title:"ready",slug:"ready",children:[]},{level:3,title:"initialData",slug:"initialdata",children:[]},{level:3,title:"refreshDeps",slug:"refreshdeps",children:[]},{level:3,title:"queryKey",slug:"querykey",children:[]},{level:3,title:"formatResult",slug:"formatresult",children:[]},{level:3,title:"onSuccess",slug:"onsuccess",children:[]},{level:3,title:"onError",slug:"onerror",children:[]}]}],filePathRelative:"api/index.md",git:{updatedTime:1621482699e3,contributors:[]}}}}]);