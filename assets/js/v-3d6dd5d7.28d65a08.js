(self.webpackChunken=self.webpackChunken||[]).push([[183],{9074:(s,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>e});const t=(0,a(7875).uE)('<h1 id="default-request"><a class="header-anchor" href="#default-request">#</a> Default Request</h1><p>We have built-in <code>Fetch</code> to process your request, you can use <a href="#request-method">Request Method</a>, <a href="#string">String</a> or <a href="#object">Object</a> as the first Parameter incoming</p><h2 id="request-method"><a class="header-anchor" href="#request-method">#</a> Request Method</h2><div class="custom-container tip"><p class="custom-container-title">Tips</p><p>We recommend you to use this</p></div><p>You can pass in a function whose return value is of type <code>Promise</code>.</p><p>In other words, you can use <strong>third-party request library (such as <code>axios</code>)</strong> to get data and then pass the request to VueRequest for management. For details, please refer to the following example.</p><div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getUser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">&#39;api/user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>getUser<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div></div></div><h2 id="string"><a class="header-anchor" href="#string">#</a> String</h2><p>You can pass in a URL.</p><div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span><span class="token string">&#39;api/user?name=John&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div></div></div><h2 id="object"><a class="header-anchor" href="#object">#</a> Object</h2><p>You can pass in an object containing the <code>url</code> attribute.</p><div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> objectService <span class="token operator">=</span> <span class="token punctuation">{</span>\n  url<span class="token operator">:</span> <span class="token string">&#39;api/user&#39;</span><span class="token punctuation">,</span>\n  method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>\n  body<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;Benny&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  headers<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token string">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>objectService<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br></div></div><hr><p>You should now have a minimal example of VueRequest. Next, let&#39;s take a look at some other configurations.</p>',15),e={render:function(s,n){return t}}},7239:(s,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>t});const t={key:"v-3d6dd5d7",path:"/guide/documentation/default-request.html",title:"Default Request",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Request Method",slug:"request-method",children:[]},{level:2,title:"String",slug:"string",children:[]},{level:2,title:"Object",slug:"object",children:[]}],filePathRelative:"guide/documentation/default-request.md",git:{updatedTime:1621477528e3,contributors:[]}}}}]);